package com.jasminesloan.week3_java;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import org.json.JSONException;
import org.json.JSONObject;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.GridLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.TextView;
import android.widget.Toast;

import com.jasminesloan.library.JSON;
import com.jasminesloan.library.Network;



public class MainActivity extends Activity {

	Context _context;
	Boolean _isConnected = false;
	ArrayList<String> _history;
	LayoutParams _params;
	GridLayout _layoutGrid;
	TextView _header;
	TextView _nameField;
	TextView _joke;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.form);
		_context = this;
		_history = getHistory();
		
		
		_nameField = (EditText) findViewById(R.id._firstName);
		
		Button getButton = (Button) findViewById(R.id._getButton);
		 getButton.setOnClickListener(new OnClickListener(){
			@Override
			public void onClick(View v) {

				netConnect();
				if (_isConnected) {

					if (_nameField.length()!= 0) {
						getJoke(_nameField.getText().toString());

						// DISMISSES KEYBOARD on CLICK 
						InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
						imm.hideSoftInputFromWindow(_nameField.getWindowToken(), 0);	


					} else {
						// ALERTS USER TO INPUT A VALUE 	
						Toast alertToast = Toast.makeText(_context, "Please Enter A Name", Toast.LENGTH_SHORT);	
						alertToast.show();

						}
				} 
			}

		 });
		
		Button random = (Button)findViewById(R.id._getRandom);
		random.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				netConnect();
				if (_isConnected){
					getRandom();
				};
			}
		});
		
		Button save = (Button)findViewById(R.id._history);		
		save.setOnClickListener(new OnClickListener() {
			
			public void onClick(View v) {
				Intent intent = new Intent(v.getContext(),ArrayHistory.class);
				startActivityForResult(intent, 0);
			}
		});

	}
	
	private void netConnect(){

		 _isConnected = Network.getConnectionStatus(_context);
		 if (_isConnected) {
			Log.i("NETWORK CONNECTION", Network.getConnectionType(_context));
			} else{

				// AlertDialog if not connected
		       AlertDialog.Builder alert = new AlertDialog.Builder(_context);
		       alert.setTitle("Error!");
		       alert.setMessage("Network Error");
		       alert.setCancelable(false);
		       alert.setPositiveButton("", new DialogInterface.OnClickListener() {
		           @Override
		           public void onClick(DialogInterface dialogInterface, int i) {
		               dialogInterface.cancel();
		           }
		       });
		       alert.show();

			}		 
		}


	@SuppressWarnings("unchecked")
	private ArrayList<String> getHistory (){
		Object stored = JSON.readStringObject(_context, "historyArray", false);
		ArrayList<String> history;
		if (stored == null) {
			Log.i("HISTORY", "NO HISTORY FILE FOUND");
			history = new ArrayList<String>();
		} else {
			history = (ArrayList<String>) stored;
		}
		return history;
	}
	
	private void getJoke(String firstName) {
		String baseURL = "http://api.icndb.com/jokes/random";
		String nameQuery = "?firstName="+firstName+"&amp;lastName=";
		
		URL finalURL;
		try {
			finalURL = new URL(baseURL+nameQuery);
			Log.i("Final URL", finalURL.toString());
			DataRequest dataRequest = new DataRequest();
			dataRequest.execute(finalURL);
		}catch (MalformedURLException e){
			Log.e("URL Error", "Error");
			finalURL = null;
		}
	}
	
	private void getRandom() {
		String baseURL = "http://api.icndb.com/jokes/random";
		URL finalURL;
		try {
			finalURL = new URL(baseURL);
			Log.i("Final URL", finalURL.toString());
			DataRequest dataRequest = new DataRequest();
			dataRequest.execute(finalURL);
		}catch (MalformedURLException e){
			Log.e("URL Error", "Error");
			finalURL = null;
		}
	}
	
	private class DataRequest extends AsyncTask<URL, Void, String>{
		@Override
		protected String doInBackground(URL... urls) {
			String response = "";
			for (URL url : urls) {
				response = Network.getURLStringResponse(url);
			}
			return response;
		}
		
		protected void onPostExecute(String result){
			Log.i("URL Response", result);
			try{
				JSONObject json = new JSONObject(result);
				JSONObject results = json.getJSONObject("value");
				String data = results.getString("joke");
				String _stringFormat = data.replaceAll("&quot;", "''");
				_joke = (TextView)findViewById(R.id.joke);
				_joke.setText(_stringFormat);
				_history.add(_stringFormat);
				JSON.storeObjectFile(_context, "historyArray", _history, false);
				Log.i("ARRAYLIST WRITTEN", _history.toString());
				
			}catch (JSONException e){
				Log.e("JSON Error", e.toString());
			}
		}
	}



	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

}
